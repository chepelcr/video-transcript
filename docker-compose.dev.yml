version: '3.8'

# Development-focused Docker Compose configuration
# Use this for local development with hot reloading

services:
  # Development PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: videoscript-postgres-dev
    environment:
      POSTGRES_DB: videoscript_dev
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API Server (Development with hot reload)
  backend:
    build:
      context: .
      target: dev
    container_name: videoscript-backend-dev
    environment:
      NODE_ENV: development
      PORT: 5000
      # Use AWS RDS instead of local PostgreSQL
      AWS_RDS_DATABASE_URL: ${AWS_RDS_DATABASE_URL:-postgresql://postgres:postgres@postgres:5432/videoscript_dev}
      DATABASE_URL: ${DATABASE_URL:-postgresql://postgres:postgres@postgres:5432/videoscript_dev}
      JWT_SECRET: dev-jwt-secret-key
      EMAIL_HOST: smtp.gmail.com
      EMAIL_PORT: 587
      EMAIL_USER: ${EMAIL_USER:-your-email@example.com}
      EMAIL_PASS: ${EMAIL_PASS:-your-app-password}
      STRIPE_SECRET_KEY: ${STRIPE_SECRET_KEY:-sk_test_placeholder}
      PAYPAL_CLIENT_ID: ${PAYPAL_CLIENT_ID:-placeholder}
      PAYPAL_CLIENT_SECRET: ${PAYPAL_CLIENT_SECRET:-placeholder}
      VITE_PYTHON_API_URL: ${VITE_PYTHON_API_URL:-http://localhost:8000}
    ports:
      - "5000:5000"
    volumes:
      - .:/app
      - /app/node_modules
      - /app/dist
    depends_on:
      postgres:
        condition: service_healthy
    command: npm run dev
    stdin_open: true
    tty: true
    restart: unless-stopped

volumes:
  postgres_dev_data:

networks:
  default:
    name: videoscript-dev-network